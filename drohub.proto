syntax = "proto3";

service Drone {
  // Sends a greeting
  rpc pingService(DroneRequest) returns (stream DroneReply) {}
  rpc sendVideoTo(DroneSendVideoRequest) returns (stream DroneVideoState) {}
  rpc doTakeoff (DroneRequest) returns (DroneReply) {}
  rpc doLanding(DroneRequest) returns (DroneReply) {}
  rpc getPosition(DroneRequest) returns (stream DronePosition) {}
  rpc getBatteryLevel(DroneRequest) returns (stream DroneBatteryLevel) {}
  rpc getFlyingState(DroneRequest) returns (stream DroneFlyingState) {}
  rpc getRadioSignal(DroneRequest) returns (stream DroneRadioSignal) {}
  rpc moveToPosition(DroneRequestPosition) returns (DroneReply) {}
  rpc getFileList(DroneRequest) returns (DroneFileList) {}
  rpc getFileListStream(DroneRequest) returns (stream DroneFileList) {}
}

message FileEntry {
  string resource_id = 1;
  oneof Thumbnail {
    string thumbnail_id = 2;
  }

  enum ResourceType {
    VIDEO = 0;
    IMAGE = 1;
    OTHER = 2;
  }
  ResourceType resource_type = 3;
}

message DroneSendVideoRequest {
   enum VideoType {
    VP8 = 0;
    H264 = 1;
  }
  string rtp_url = 1;
  VideoType video_type = 2;
}

message DroneVideoState {
  enum State {
    LIVE = 0;
    STOPPED = 1;
    DIED = 2;
    INVALID_CONDITION = 3;
  }
  State state = 1;
  oneof StateString {
    string human_message = 2;
  }
  string rtp_url = 3;
  string serial = 4;
  uint32 timestamp = 5;
}

message DroneFileList {
  repeated FileEntry file_entries = 1;
  string serial = 2;
  uint32 timestamp = 3;
}

message DroneRequest {
}

message DroneBatteryLevel {
    double battery_level_percent = 1;
    string serial = 2;
    uint32 timestamp = 3;
}

message DroneBatteryHealth {
    double battery_health_percent = 1;
    string serial = 2;
    uint32 timestamp = 3;
}

message DroneRadioSignal {
    oneof RadioOption {
      float signal_quality = 1;
      float rssi = 2;

    }
    string serial = 3;
    uint32 timestamp = 4;
}

message DroneFlyingState {
  enum FlyingState {
    LANDED = 0;
    TAKING_OFF = 1;
    HOVERING = 2;
    FLYING = 3;
    LANDING = 4;
    EMERGENCY = 5;
    USER_TAKEOFF = 6;
    MOTOR_RAMPING = 7;
    EMERGENCY_LANDING = 8;
  }

  FlyingState state = 1;
  string serial = 2;
  uint32 timestamp = 3;
}

message DroneRequestPosition {
  double latitude = 1;
  double longitude = 2;
  double altitude = 3;
  double heading = 4;
  string serial = 5;
}

message DronePosition {
  double latitude = 1;
  double longitude = 2;
  double altitude = 3;
  string serial = 4;
  uint32 timestamp = 5;
}

// The response message containing the greetings
message DroneReply {
  bool message = 1;
}